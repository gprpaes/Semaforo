
LIBRARY ieee;
USE ieee.std_logic_1164.all;

entity vhdl2 is 
	generic(
		timeRG: POSITIVE := 1800;
		timeRY: POSITIVE := 300;
		timeGR: POSITIVE := 2700;
		timeYR: POSITIVE := 300;
		timeTEST: POSITIVE := 60;
		timeMAX: POSITIVE := 2700);
		
	PORT(
		clk,stby, test: IN std_logic;
		r1, r2, y1, y2, g1, g2: out std_logic);
end vhdl2;

architecture fsm of vhdl2 is 
	type state is (RG, RY, GR, YR, YY);
	SIGNAL pr_state, nx_state: state;
	SIGNAL timer: integer range 0 to timeMAX;
BEGIN
	---lower
	PROCESS (clk, stby)
		VARIABLE count : INTEGER RANGE 0 TO timeMAX;
	BEGIN
		IF (stby='1') THEN
			pr_state <= YY;
			count := 0;
			ELSIF (clk'EVENT AND clk='1') THEN
				count := count + 1;
				IF (count >=timer) THEN
					pr_state <= nx_state;
					count := 0;
				END IF;
			END IF;
	END PROCESS;
	---upper
	PROCESS (pr_state, test)
	BEGIN
		CASE pr_state IS
			WHEN RG =>
				r1<='1'; y1<='0'; g1<='0';
				r2<='0'; y2<='0'; g2<='1';
				nx_state <= RY;
				IF (test='0') THEN
					timer <= timeRG;
				ELSE
					timer <= timeTEST;
				END IF;
			WHEN RY =>
				r1<='1'; y1<='0'; g1<='0';
				r2<='0'; y2<='1'; g2<='0';
				nx_state <= GR;
				IF (test='0') THEN
					timer <= timeRY;
				ELSE
					timer <= timeTEST;
				END IF;
			WHEN GR =>
				r1<='0'; y1<='0'; g1<='1';
				r2<='1'; y2<='0'; g2<='0';
				nx_state <= YR;
				IF (test='0') THEN
					timer <= timeGR;
				ELSE
					timer <= timeTEST;
				END IF;
			WHEN YR =>
				r1<='0'; y1<='1'; g1<='0';
				r2<='1'; y2<='0'; g2<='0';
				nx_state <= RG;
				IF (test='0') THEN
					timer <= timeRG;
				ELSE
					timer <= timeTEST;
				END IF;
			WHEN YY =>
				r1<='0'; y1<='1'; g1<='0';
				r2<='0'; y2<='1'; g2<='0';
				timer <= timeTEST;
				nx_state <= RY;					
			END CASE;
		END PROCESS;
	END fsm;
	
		